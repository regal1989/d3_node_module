{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\d3ia\\\\src\\\\TableRender.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass TableRender extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [{\n        id: 1,\n        date: \"2014-04-18\",\n        total: 121.0,\n        status: \"Shipped\",\n        name: \"A\",\n        points: 5,\n        percent: 50\n      }, {\n        id: 2,\n        date: \"2014-04-21\",\n        total: 121.0,\n        status: \"Not Shipped\",\n        name: \"B\",\n        points: 10,\n        percent: 60\n      }],\n      expandedRow: null\n    };\n  }\n\n  handleRowClick(rowId) {\n    const currentExpandedRow = this.state.expandedRow;\n    this.setState({\n      expandedRow: rowId === currentExpandedRow ? null : rowId\n    });\n  }\n\n  renderItem(item) {\n    const clickCallback = () => this.handleRowClick(item.id);\n\n    const itemRows = [React.createElement(\"tr\", {\n      key: \"row-data-\" + item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: clickCallback,\n      key: \"row-data-\" + item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, item.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.total), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, item.status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item.points), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item.percent))];\n\n    if (this.state.expandedRow === item.id) {\n      itemRows.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colspan: Object.keys(this.state.data[0]).length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" \", item.status, \" \"))));\n    }\n\n    return itemRows;\n  }\n\n  render() {\n    let allItemRows = [];\n    this.state.data.forEach(item => {\n      const perItemRows = this.renderItem(item);\n      allItemRows = allItemRows.concat(perItemRows);\n    });\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, allItemRows);\n  }\n\n}\n\nexport default TableRender;","map":{"version":3,"sources":["F:\\Workspace\\d3ia\\src\\TableRender.js"],"names":["React","Component","TableRender","constructor","state","data","id","date","total","status","name","points","percent","expandedRow","handleRowClick","rowId","currentExpandedRow","setState","renderItem","item","clickCallback","itemRows","push","Object","keys","length","render","allItemRows","forEach","perItemRows","concat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css'\r\nclass TableRender extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          data : [\r\n            {id : 1, date : \"2014-04-18\", total : 121.0, status : \"Shipped\", name : \"A\", points: 5, percent : 50},\r\n            {id : 2, date : \"2014-04-21\", total : 121.0, status : \"Not Shipped\", name : \"B\", points: 10, percent: 60},\r\n          ],\r\n          expandedRow: null,\r\n        };\r\n      }\r\n\r\n   handleRowClick(rowId) {\r\n        const currentExpandedRow = this.state.expandedRow;\r\n        this.setState({ expandedRow: (rowId === currentExpandedRow) ? null : rowId })\r\n    }\r\n\r\n    renderItem(item) {\r\n        const clickCallback = () => this.handleRowClick(item.id);\r\n\r\n        const itemRows = [\r\n          <tr key={\"row-data-\" + item.id}>\r\n            <td onClick={clickCallback} key={\"row-data-\" + item.id}>{item.id}</td>\r\n            <td>{item.date}</td>\r\n            <td>{item.total}</td>\r\n            <td>{item.status}</td>\r\n            <td>{item.name}</td>\r\n            <td>{item.points}</td>\r\n            <td>{item.percent}</td>\r\n           </tr>\r\n         ];\r\n    \r\n        if (this.state.expandedRow === item.id) {\r\n          itemRows.push(\r\n            <tr>\r\n                <td colspan={Object.keys(this.state.data[0]).length}>\r\n                  <div> {item.status} </div>\r\n                </td>\r\n            </tr>\r\n          );\r\n        }\r\n    \r\n        return itemRows;    \r\n    }\r\n    render() {\r\n        let allItemRows = [];\r\n        this.state.data.forEach(item => {\r\n            const perItemRows = this.renderItem(item);\r\n            allItemRows = allItemRows.concat(perItemRows);\r\n        });\r\n        return (\r\n\t\t\t     <table>{allItemRows}</table>\r\n        );\r\n    }\r\n}\r\nexport default TableRender"]},"metadata":{},"sourceType":"module"}